// Code generated by MockGen. DO NOT EDIT.
// Source: default_domain.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	model "github.com/authgear/authgear-server/pkg/portal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockDefaultDomainDomainService is a mock of DefaultDomainDomainService interface.
type MockDefaultDomainDomainService struct {
	ctrl     *gomock.Controller
	recorder *MockDefaultDomainDomainServiceMockRecorder
}

// MockDefaultDomainDomainServiceMockRecorder is the mock recorder for MockDefaultDomainDomainService.
type MockDefaultDomainDomainServiceMockRecorder struct {
	mock *MockDefaultDomainDomainService
}

// NewMockDefaultDomainDomainService creates a new mock instance.
func NewMockDefaultDomainDomainService(ctrl *gomock.Controller) *MockDefaultDomainDomainService {
	mock := &MockDefaultDomainDomainService{ctrl: ctrl}
	mock.recorder = &MockDefaultDomainDomainServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDefaultDomainDomainService) EXPECT() *MockDefaultDomainDomainServiceMockRecorder {
	return m.recorder
}

// CreateDomain mocks base method.
func (m *MockDefaultDomainDomainService) CreateDomain(appID, domain string, isVerified, isCustom bool) (*model.Domain, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDomain", appID, domain, isVerified, isCustom)
	ret0, _ := ret[0].(*model.Domain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDomain indicates an expected call of CreateDomain.
func (mr *MockDefaultDomainDomainServiceMockRecorder) CreateDomain(appID, domain, isVerified, isCustom interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDomain", reflect.TypeOf((*MockDefaultDomainDomainService)(nil).CreateDomain), appID, domain, isVerified, isCustom)
}
