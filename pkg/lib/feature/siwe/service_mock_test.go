// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package siwe is a generated GoMock package.
package siwe

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNonceStore is a mock of NonceStore interface.
type MockNonceStore struct {
	ctrl     *gomock.Controller
	recorder *MockNonceStoreMockRecorder
}

// MockNonceStoreMockRecorder is the mock recorder for MockNonceStore.
type MockNonceStoreMockRecorder struct {
	mock *MockNonceStore
}

// NewMockNonceStore creates a new mock instance.
func NewMockNonceStore(ctrl *gomock.Controller) *MockNonceStore {
	mock := &MockNonceStore{ctrl: ctrl}
	mock.recorder = &MockNonceStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNonceStore) EXPECT() *MockNonceStoreMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockNonceStore) Create(nonce *Nonce) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", nonce)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockNonceStoreMockRecorder) Create(nonce interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockNonceStore)(nil).Create), nonce)
}

// Delete mocks base method.
func (m *MockNonceStore) Delete(nonce *Nonce) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", nonce)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockNonceStoreMockRecorder) Delete(nonce interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockNonceStore)(nil).Delete), nonce)
}

// Get mocks base method.
func (m *MockNonceStore) Get(nonce *Nonce) (*Nonce, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", nonce)
	ret0, _ := ret[0].(*Nonce)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockNonceStoreMockRecorder) Get(nonce interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockNonceStore)(nil).Get), nonce)
}
