// Code generated by MockGen. DO NOT EDIT.
// Source: deliverer.go

// Package hook is a generated GoMock package.
package hook

import (
	reflect "reflect"

	accesscontrol "github.com/authgear/authgear-server/pkg/util/accesscontrol"
	gomock "github.com/golang/mock/gomock"
)

// MockStdAttrsServiceNoEvent is a mock of StdAttrsServiceNoEvent interface.
type MockStdAttrsServiceNoEvent struct {
	ctrl     *gomock.Controller
	recorder *MockStdAttrsServiceNoEventMockRecorder
}

// MockStdAttrsServiceNoEventMockRecorder is the mock recorder for MockStdAttrsServiceNoEvent.
type MockStdAttrsServiceNoEventMockRecorder struct {
	mock *MockStdAttrsServiceNoEvent
}

// NewMockStdAttrsServiceNoEvent creates a new mock instance.
func NewMockStdAttrsServiceNoEvent(ctrl *gomock.Controller) *MockStdAttrsServiceNoEvent {
	mock := &MockStdAttrsServiceNoEvent{ctrl: ctrl}
	mock.recorder = &MockStdAttrsServiceNoEventMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStdAttrsServiceNoEvent) EXPECT() *MockStdAttrsServiceNoEventMockRecorder {
	return m.recorder
}

// UpdateStandardAttributes mocks base method.
func (m *MockStdAttrsServiceNoEvent) UpdateStandardAttributes(role accesscontrol.Role, userID string, stdAttrs map[string]interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateStandardAttributes", role, userID, stdAttrs)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateStandardAttributes indicates an expected call of UpdateStandardAttributes.
func (mr *MockStdAttrsServiceNoEventMockRecorder) UpdateStandardAttributes(role, userID, stdAttrs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStandardAttributes", reflect.TypeOf((*MockStdAttrsServiceNoEvent)(nil).UpdateStandardAttributes), role, userID, stdAttrs)
}
