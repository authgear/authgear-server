name: CI

on:
  push:
    branches:
    - '*'
    - '!gh-pages'
  pull_request:
    branches:
    - '*'
    - '!gh-pages'

jobs:
  portal-test:
    runs-on: ubuntu-20.04
    steps:
    - run: sudo add-apt-repository -y ppa:strukturag/libde265
    - run: sudo add-apt-repository -y ppa:strukturag/libheif
    - run: sudo add-apt-repository ppa:tonimelisma/ppa
    - run: sudo apt -y install libvips-dev
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: "16.14.0"
    - run: npm ci
      working-directory: ./portal
    - run: npm run typecheck
      working-directory: ./portal
      if: ${{ !cancelled() }}
    - run: npm run eslint
      working-directory: ./portal
      if: ${{ !cancelled() }}
    - run: npm run stylelint
      working-directory: ./portal
      if: ${{ !cancelled() }}
    - run: npm run fmt
      working-directory: ./portal
      if: ${{ !cancelled() }}
    - run: npm run gentype
      working-directory: ./portal
      if: ${{ !cancelled() }}
    - run: make check-tidy
      working-directory: ./portal
      if: ${{ !cancelled() }}
    - run: npm run build
      working-directory: ./portal
      if: ${{ !cancelled() }}

  portal-image:
    runs-on: ubuntu-20.04
    needs: portal-test
    env:
      TARGET: portal
      IMAGE_NAME: authgear-portal
    steps:
    - run: sudo add-apt-repository -y ppa:strukturag/libde265
    - run: sudo add-apt-repository -y ppa:strukturag/libheif
    - run: sudo add-apt-repository ppa:tonimelisma/ppa
    - run: sudo apt -y install libvips-dev
    - uses: actions/checkout@v2
    - run: make build-image TARGET=$TARGET IMAGE_NAME=$IMAGE_NAME
    - run: make tag-image IMAGE_NAME=$IMAGE_NAME
    - name: docker login
      if: ${{ github.repository == 'authgear/authgear-server' && github.event_name == 'push' }}
      env:
        QUAY_IO_USERNAME: ${{ secrets.QUAY_IO_USERNAME }}
        QUAY_IO_PASSWORD: ${{ secrets.QUAY_IO_PASSWORD }}
      run: docker login -u "$QUAY_IO_USERNAME" -p "$QUAY_IO_PASSWORD" quay.io
    - run: make push-image IMAGE_NAME=$IMAGE_NAME
      if: ${{ github.repository == 'authgear/authgear-server' && github.event_name == 'push' }}

  authgear-test:
    runs-on: ubuntu-20.04
    steps:
    - run: sudo add-apt-repository -y ppa:strukturag/libde265
    - run: sudo add-apt-repository -y ppa:strukturag/libheif
    - run: sudo add-apt-repository ppa:tonimelisma/ppa
    - run: sudo apt -y install libvips-dev
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: "1.17.7"
    - uses: actions/setup-node@v1
      with:
        node-version: "16.14.0"
    - run: make vendor
    - run: make lint
      if: ${{ !cancelled() }}
    - run: make test
      if: ${{ !cancelled() }}
    - run: make check-tidy
      if: ${{ !cancelled() }}

  authgear-image:
    runs-on: ubuntu-20.04
    needs: authgear-test
    env:
      TARGET: authgear
      IMAGE_NAME: authgear-server
    steps:
    - run: sudo add-apt-repository -y ppa:strukturag/libde265
    - run: sudo add-apt-repository -y ppa:strukturag/libheif
    - run: sudo add-apt-repository ppa:tonimelisma/ppa
    - run: sudo apt -y install libvips-dev
    - uses: actions/checkout@v2
    - run: make build-image TARGET=$TARGET IMAGE_NAME=$IMAGE_NAME
    - run: make tag-image IMAGE_NAME=$IMAGE_NAME
    - name: docker login
      if: ${{ github.repository == 'authgear/authgear-server' && github.event_name == 'push' }}
      env:
        QUAY_IO_USERNAME: ${{ secrets.QUAY_IO_USERNAME }}
        QUAY_IO_PASSWORD: ${{ secrets.QUAY_IO_PASSWORD }}
      run: docker login -u "$QUAY_IO_USERNAME" -p "$QUAY_IO_PASSWORD" quay.io
    - run: make push-image IMAGE_NAME=$IMAGE_NAME
      if: ${{ github.repository == 'authgear/authgear-server' && github.event_name == 'push' }}
