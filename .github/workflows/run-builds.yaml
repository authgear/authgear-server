name: Run builds

on:
  workflow_call:
    inputs:
      push_image:
        required: false
        default: false
        type: boolean
      amd64_build_only:
        required: false
        default: false
        type: boolean

jobs:
  authgear-image-amd64:
    runs-on: ubuntu-24.04
    outputs:
      image_digest: ${{ steps.build_image.outputs.image_digest }}
    env:
      PUSH_IMAGE: "${{ inputs.push_image && 'true' || 'false' }}"
    steps:
    - uses: actions/checkout@v4
    - id: build_image
      uses: ./.github/actions/build-image
      with:
        dockerfile: ./cmd/authgear/Dockerfile
        image_name: quay.io/theauthgear/authgear-server
        push_image: "${{ env.PUSH_IMAGE }}"
        build_arch: amd64
        docker_registry: quay.io
        docker_username: "${{ env.PUSH_IMAGE == 'true' && secrets.QUAY_USERNAME || '' }}"
        docker_password: "${{ env.PUSH_IMAGE == 'true' && secrets.QUAY_ROBOT_TOKEN || '' }}"
  authgear-image-arm64:
    if: ${{ (inputs.push_image && !inputs.amd64_build_only) }}
    runs-on: ubuntu-24.04-arm
    outputs:
      image_digest: ${{ steps.build_image.outputs.image_digest }}
    env:
      PUSH_IMAGE: "${{ inputs.push_image && 'true' || 'false' }}"
    steps:
    - uses: actions/checkout@v4
    - id: build_image
      uses: ./.github/actions/build-image
      with:
        dockerfile: ./cmd/authgear/Dockerfile
        image_name: quay.io/theauthgear/authgear-server
        push_image: "${{ env.PUSH_IMAGE }}"
        build_arch: arm64
        docker_registry: quay.io
        docker_username: "${{ env.PUSH_IMAGE == 'true' && secrets.QUAY_USERNAME || '' }}"
        docker_password: "${{ env.PUSH_IMAGE == 'true' && secrets.QUAY_ROBOT_TOKEN || '' }}"

  authgear-image:
    if: ${{ (inputs.push_image && !inputs.amd64_build_only) }}
    runs-on: ubuntu-24.04
    needs: ["authgear-image-amd64", "authgear-image-arm64"]
    env:
      IMAGE_NAME: quay.io/theauthgear/authgear-server
      PUSH_IMAGE: "${{ inputs.push_image && 'true' || 'false' }}"
      SOURCE_DIGESTS: ${{ format('{0} {1}', needs.authgear-image-amd64.outputs.image_digest, needs.authgear-image-arm64.outputs.image_digest) }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/set-git-tag-name
      with:
        github_ref_type: ${{ github.ref_type }}
        github_ref_name: ${{ github.ref_name }}
    - name: docker login
      if: ${{ inputs.push_image }}
      env:
        DOCKER_USERNAME: ${{ secrets.QUAY_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.QUAY_ROBOT_TOKEN }}
      run: |
        printf "$DOCKER_PASSWORD" | docker login --password-stdin --username "$DOCKER_USERNAME" quay.io
    - run: make tag-image
    - name: docker logout
      if: ${{ always() }}
      run: |
        docker logout quay.io


  portal-image-amd64:
    outputs:
      image_digest: ${{ steps.build_image.outputs.image_digest }}
    runs-on: ubuntu-24.04
    env:
      PUSH_IMAGE: "${{ inputs.push_image && 'true' || 'false' }}"
    steps:
    - uses: actions/checkout@v4
    - id: build_image
      uses: ./.github/actions/build-image
      with:
        dockerfile: ./cmd/portal/Dockerfile
        image_name: quay.io/theauthgear/authgear-portal
        push_image: "${{ env.PUSH_IMAGE }}"
        build_arch: amd64
        docker_registry: quay.io
        docker_username: "${{ env.PUSH_IMAGE == 'true' && secrets.QUAY_USERNAME || '' }}"
        docker_password: "${{ env.PUSH_IMAGE == 'true' && secrets.QUAY_ROBOT_TOKEN || '' }}"

  portal-image-arm64:
    if: ${{ (inputs.push_image && !inputs.amd64_build_only) }}
    outputs:
      image_digest: ${{ steps.build_image.outputs.image_digest }}
    runs-on: ubuntu-24.04-arm
    env:
      PUSH_IMAGE: "${{ inputs.push_image && 'true' || 'false' }}"
    steps:
    - uses: actions/checkout@v4
    - id: build_image
      uses: ./.github/actions/build-image
      with:
        dockerfile: ./cmd/portal/Dockerfile
        image_name: quay.io/theauthgear/authgear-portal
        push_image: "${{ env.PUSH_IMAGE }}"
        build_arch: arm64
        docker_registry: quay.io
        docker_username: "${{ env.PUSH_IMAGE == 'true' && secrets.QUAY_USERNAME || '' }}"
        docker_password: "${{ env.PUSH_IMAGE == 'true' && secrets.QUAY_ROBOT_TOKEN || '' }}"

  portal-image:
    if: ${{ (inputs.push_image && !inputs.amd64_build_only) }}
    runs-on: ubuntu-24.04
    needs: ["portal-image-amd64", "portal-image-arm64"]
    env:
      IMAGE_NAME: quay.io/theauthgear/authgear-portal
      PUSH_IMAGE: "${{ inputs.push_image && 'true' || 'false' }}"
      SOURCE_DIGESTS: ${{ format('{0} {1}', needs.portal-image-amd64.outputs.image_digest, needs.portal-image-arm64.outputs.image_digest) }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/set-git-tag-name
      with:
        github_ref_type: ${{ github.ref_type }}
        github_ref_name: ${{ github.ref_name }}
    - name: docker login
      if: ${{ inputs.push_image }}
      env:
        DOCKER_USERNAME: ${{ secrets.QUAY_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.QUAY_ROBOT_TOKEN }}
      run: |
        printf "$DOCKER_PASSWORD" | docker login --password-stdin --username "$DOCKER_USERNAME" quay.io
    - run: make tag-image
    - name: docker logout
      if: ${{ always() }}
      run: |
        docker logout quay.io
