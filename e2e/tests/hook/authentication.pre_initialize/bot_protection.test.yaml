name: Login with Bot Protection Requirements - mode always
extra_files_directory: ./var
authgear.yaml:
  override: |
    hook:
      blocking_handlers:
      - event: authentication.pre_initialize
        url: authgeardeno:///deno/allowedbotprotectionalways.ts
    authentication:
      identities:
      - login_id
      primary_authenticators:
      - password
    identity:
      login_id:
        keys:
        - type: username
    bot_protection:
      enabled: true
      provider:
        type: cloudflare
        site_key: dummy
    authentication_flow:
      login_flows:
        - name: f1
          steps:
          - name: login_identify
            type: identify
            one_of:
            - identification: username
              steps:
              - name: authenticate_primary_username
                one_of:
                - authentication: primary_password
                type: authenticate
before:
  - type: user_import
    user_import: users.json
steps:
  - action: "create"
    input: |
      {
        "type": "login",
        "name": "f1"
      }
    output:
      result: |
        {
          "action": {
            "type": "identify",
            "data": {
              "options": [
                "[[arrayof]]",
                {
                  "bot_protection": {
                    "enabled": true,
                    "provider": {
                      "type": "cloudflare"
                    }
                  },
                  "identification": "[[string]]"
                }
              ]
            }
          }
        }
  - action: input
    input: |
      {
        "identification": "username",
        "login_id": "e2e_login",
        "bot_protection": {
          "type": "cloudflare",
          "response": "pass"
        }
      }
    output:
      result: |
        {
          "action": {
            "type": "authenticate",
            "data": {
              "options": [
                "[[arrayof]]",
                {
                  "bot_protection": {
                    "enabled": true,
                    "provider": {
                      "type": "cloudflare"
                    }
                  },
                  "authentication": "[[string]]"
                }
              ]
            }
          }
        }
  - action: input
    input: |
      {
        "authentication": "primary_password",
        "password": "password",
        "bot_protection": {
          "type": "cloudflare",
          "response": "pass"
        }
      }
    output:
      result: |
        {
          "action": {
            "type": "finished"
          }
        }
---
name: Login with Bot Protection Requirements - mode never
extra_files_directory: ./var
authgear.yaml:
  override: |
    hook:
      blocking_handlers:
      - event: authentication.pre_initialize
        url: authgeardeno:///deno/allowedbotprotectionnever.ts
    authentication:
      identities:
      - login_id
      primary_authenticators:
      - password
    identity:
      login_id:
        keys:
        - type: username
    bot_protection:
      enabled: true
      provider:
        type: cloudflare
        site_key: dummy
    authentication_flow:
      login_flows:
        - name: f1
          steps:
          - name: login_identify
            type: identify
            one_of:
            - identification: username
              steps:
              - name: authenticate_primary_username
                one_of:
                - authentication: primary_password
                  bot_protection:
                    mode: always
                type: authenticate
before:
  - type: user_import
    user_import: users.json
steps:
  - action: "create"
    input: |
      {
        "type": "login",
        "name": "f1"
      }
    output:
      result: |
        {
          "action": {
            "type": "identify",
            "data": {
              "options": [
                "[[arrayof]]",
                {
                  "identification": "[[string]]"
                }
              ]
            }
          }
        }
  - action: input
    input: |
      {
        "identification": "username",
        "login_id": "e2e_login"
      }
    output:
      result: |
        {
          "action": {
            "type": "authenticate",
            "data": {
              "options": [
                "[[arrayof]]",
                {
                  "authentication": "[[string]]"
                }
              ]
            }
          }
        }
  - action: input
    input: |
      {
        "authentication": "primary_password",
        "password": "password"
      }
    output:
      result: |
        {
          "action": {
            "type": "finished"
          }
        }
---
name: Login with Bot Protection Requirements - not changed
extra_files_directory: ./var
authgear.yaml:
  override: |
    hook:
      blocking_handlers:
      - event: authentication.pre_initialize
        url: authgeardeno:///deno/allowed.ts
    authentication:
      identities:
      - login_id
      primary_authenticators:
      - password
    identity:
      login_id:
        keys:
        - type: username
    bot_protection:
      enabled: true
      provider:
        type: cloudflare
        site_key: dummy
    authentication_flow:
      login_flows:
        - name: f1
          steps:
          - name: login_identify
            type: identify
            one_of:
            - identification: username
              steps:
              - name: authenticate_primary_username
                one_of:
                - authentication: primary_password
                  bot_protection:
                    mode: always
                type: authenticate
before:
  - type: user_import
    user_import: users.json
steps:
  - action: "create"
    input: |
      {
        "type": "login",
        "name": "f1"
      }
    output:
      result: |
        {
          "action": {
            "type": "identify",
            "data": {
              "options": [
                "[[arrayof]]",
                {
                  "identification": "[[string]]"
                }
              ]
            }
          }
        }
  - action: input
    input: |
      {
        "identification": "username",
        "login_id": "e2e_login"
      }
    output:
      result: |
        {
          "action": {
            "type": "authenticate",
            "data": {
              "options": [
                "[[arrayof]]",
                {
                  "bot_protection": {
                    "enabled": true,
                    "provider": {
                      "type": "cloudflare"
                    }
                  },
                  "authentication": "[[string]]"
                }
              ]
            }
          }
        }
  - action: input
    input: |
      {
        "authentication": "primary_password",
        "password": "password",
        "bot_protection": {
          "type": "cloudflare",
          "response": "pass"
        }
      }
    output:
      result: |
        {
          "action": {
            "type": "finished"
          }
        }
