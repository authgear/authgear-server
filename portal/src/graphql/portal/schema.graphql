""""""
input AcceptCollaboratorInvitationInput {
  """Invitation code."""
  code: String!
}

""""""
type AcceptCollaboratorInvitationPayload {
  """"""
  app: App!
}

"""Admin API secret"""
type AdminAPISecret {
  """"""
  createdAt: DateTime

  """"""
  keyID: String!

  """"""
  privateKeyPEM: String

  """"""
  publicKeyPEM: String!
}

"""Authgear app"""
type App implements Node {
  """"""
  collaboratorInvitations: [CollaboratorInvitation!]!

  """"""
  collaborators: [Collaborator!]!

  """"""
  domains: [Domain!]!

  """"""
  effectiveAppConfig: AppConfig!

  """"""
  effectiveFeatureConfig: FeatureConfig!

  """The ID of an object"""
  id: ID!

  """"""
  planName: String!

  """"""
  rawAppConfig: AppConfig!

  """"""
  resources(paths: [String!]): [AppResource!]!

  """"""
  secretConfig: SecretConfig!

  """"""
  tutorialStatus: TutorialStatus!
}

"""The `AppConfig` scalar type represents an app config JSON object"""
scalar AppConfig

"""A connection to a list of items."""
type AppConnection {
  """Information to aid in pagination."""
  edges: [AppEdge]

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """Total number of nodes in the connection."""
  totalCount: Int
}

"""An edge in a connection"""
type AppEdge {
  """ cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: App
}

"""Resource file for an app"""
type AppResource {
  """"""
  data: String

  """"""
  effectiveData: String

  """"""
  languageTag: String

  """"""
  path: String!
}

"""Update to resource file."""
input AppResourceUpdate {
  """New data of the resource file. Set to null to remove it."""
  data: String

  """Path of the resource file to update."""
  path: String!
}

""""""
type Chart {
  """"""
  dataset: [DataPoint]!
}

""""""
type CheckCollaboratorInvitationPayload {
  """"""
  appID: String!

  """"""
  isInvitee: Boolean!
}

"""Collaborator of an app"""
type Collaborator {
  """"""
  createdAt: DateTime!

  """"""
  id: String!

  """"""
  role: CollaboratorRole!

  """"""
  user: User!
}

"""Collaborator invitation of an app"""
type CollaboratorInvitation {
  """"""
  createdAt: DateTime!

  """"""
  expireAt: DateTime!

  """"""
  id: String!

  """"""
  invitedBy: User!

  """"""
  inviteeEmail: String!
}

""""""
enum CollaboratorRole {
  """"""
  EDITOR

  """"""
  OWNER
}

""""""
input CreateAppInput {
  """ID of the new app."""
  id: String!
}

""""""
type CreateAppPayload {
  """"""
  app: App!
}

""""""
input CreateCheckoutSessionInput {
  """App ID."""
  appID: ID!

  """Plan name."""
  planName: String!
}

""""""
type CreateCheckoutSessionPayload {
  """"""
  url: String!
}

""""""
input CreateCollaboratorInvitationInput {
  """Target app ID."""
  appID: ID!

  """Invitee email address."""
  inviteeEmail: String!
}

""""""
type CreateCollaboratorInvitationPayload {
  """"""
  app: App!

  """"""
  collaboratorInvitation: CollaboratorInvitation!
}

""""""
input CreateDomainInput {
  """Target app ID."""
  appID: ID!

  """Domain name."""
  domain: String!
}

""""""
type CreateDomainPayload {
  """"""
  app: App!

  """"""
  domain: Domain!
}

""""""
type DataPoint {
  """"""
  data: Float!

  """"""
  label: String!
}

"""
The `Date` scalar type represents a Date. The Date is serialized in ISO 8601 format
"""
scalar Date

"""
The `DateTime` scalar type represents a DateTime. The DateTime is serialized as an RFC 3339 quoted string
"""
scalar DateTime

""""""
input DeleteCollaboratorInput {
  """Collaborator ID."""
  collaboratorID: String!
}

""""""
input DeleteCollaboratorInvitationInput {
  """Collaborator invitation ID."""
  collaboratorInvitationID: String!
}

""""""
type DeleteCollaboratorInvitationPayload {
  """"""
  app: App!
}

""""""
type DeleteCollaboratorPayload {
  """"""
  app: App!
}

""""""
input DeleteDomainInput {
  """Target app ID."""
  appID: ID!

  """Domain ID."""
  domainID: String!
}

""""""
type DeleteDomainPayload {
  """"""
  app: App!
}

"""DNS domain of an app"""
type Domain {
  """"""
  apexDomain: String!

  """"""
  cookieDomain: String!

  """"""
  createdAt: DateTime!

  """"""
  domain: String!

  """"""
  id: String!

  """"""
  isCustom: Boolean!

  """"""
  isVerified: Boolean!

  """"""
  verificationDNSRecord: String!
}

"""
The `FeatureConfig` scalar type represents an feature config JSON object
"""
scalar FeatureConfig

""""""
type Mutation {
  """Accept collaborator invitation to the target app."""
  acceptCollaboratorInvitation(input: AcceptCollaboratorInvitationInput!): AcceptCollaboratorInvitationPayload!

  """Create new app"""
  createApp(input: CreateAppInput!): CreateAppPayload!

  """Create stripe checkout session"""
  createCheckoutSession(input: CreateCheckoutSessionInput!): CreateCheckoutSessionPayload!

  """Invite a collaborator to the target app."""
  createCollaboratorInvitation(input: CreateCollaboratorInvitationInput!): CreateCollaboratorInvitationPayload!

  """Create domain for target app"""
  createDomain(input: CreateDomainInput!): CreateDomainPayload!

  """Delete collaborator of target app."""
  deleteCollaborator(input: DeleteCollaboratorInput!): DeleteCollaboratorPayload!

  """Delete collaborator invitation of target app."""
  deleteCollaboratorInvitation(input: DeleteCollaboratorInvitationInput!): DeleteCollaboratorInvitationPayload!

  """Delete domain of target app"""
  deleteDomain(input: DeleteDomainInput!): DeleteDomainPayload!

  """Send test STMP configuration email"""
  sendTestSMTPConfigurationEmail(input: sendTestSMTPConfigurationEmailInput!): Boolean

  """Skip the tutorial of the app"""
  skipAppTutorial(input: SkipAppTutorialInput!): SkipAppTutorialPayload!

  """Skip a progress of the tutorial of the app"""
  skipAppTutorialProgress(input: SkipAppTutorialProgressInput!): SkipAppTutorialProgressPayload!

  """Update app"""
  updateApp(input: UpdateAppInput!): UpdateAppPayload!

  """Request verification of a domain of target app"""
  verifyDomain(input: VerifyDomainInput!): VerifyDomainPayload!
}

"""An object with an ID"""
interface Node {
  """The id of the object"""
  id: ID!
}

"""OAuth client secret"""
type OAuthClientSecret {
  """"""
  alias: String!

  """"""
  clientSecret: String!
}

""""""
input OauthClientSecretInput {
  """"""
  alias: String!

  """"""
  clientSecret: String!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

""""""
enum Periodical {
  """"""
  MONTHLY

  """"""
  WEEKLY
}

""""""
type Query {
  """Active users chart dataset"""
  activeUserChart(
    """Target app ID."""
    appID: ID!

    """"""
    periodical: Periodical!

    """"""
    rangeFrom: Date!

    """"""
    rangeTo: Date!
  ): Chart

  """All apps accessible by the viewer"""
  apps(after: String, before: String, first: Int, last: Int): AppConnection

  """Check whether the viewer can accept the collaboration invitation"""
  checkCollaboratorInvitation(code: String!): CheckCollaboratorInvitationPayload

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node

  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!

  """Signup by methods dataset"""
  signupByMethodsChart(
    """Target app ID."""
    appID: ID!

    """"""
    rangeFrom: Date!

    """"""
    rangeTo: Date!
  ): Chart

  """Signup conversion rate dashboard data"""
  signupConversionRate(
    """Target app ID."""
    appID: ID!

    """"""
    rangeFrom: Date!

    """"""
    rangeTo: Date!
  ): SignupConversionRate

  """Available subscription plans"""
  subscriptionPlans: [SubscriptionPlan!]!

  """Total users count chart dataset"""
  totalUserCountChart(
    """Target app ID."""
    appID: ID!

    """"""
    rangeFrom: Date!

    """"""
    rangeTo: Date!
  ): Chart

  """The current viewer"""
  viewer: User
}

"""SMTP secret"""
type SMTPSecret {
  """"""
  host: String!

  """"""
  password: String

  """"""
  port: Int!

  """"""
  username: String!
}

""""""
input SMTPSecretInput {
  """"""
  host: String!

  """"""
  password: String

  """"""
  port: Int!

  """"""
  username: String!
}

"""The content of authgear.secrets.yaml"""
type SecretConfig {
  """"""
  adminAPISecrets: [AdminAPISecret!]

  """"""
  oauthClientSecrets: [OAuthClientSecret!]

  """"""
  smtpSecret: SMTPSecret

  """"""
  webhookSecret: WebhookSecret
}

""""""
input SecretConfigInput {
  """"""
  oauthClientSecrets: [OauthClientSecretInput!]

  """"""
  smtpSecret: SMTPSecretInput
}

"""Signup conversion rate dashboard data"""
type SignupConversionRate {
  """"""
  conversionRate: Float!

  """"""
  totalSignup: Int!

  """"""
  totalSignupUniquePageView: Int!
}

""""""
input SkipAppTutorialInput {
  """ID of the app."""
  id: String!
}

""""""
type SkipAppTutorialPayload {
  """"""
  app: App!
}

""""""
input SkipAppTutorialProgressInput {
  """ID of the app."""
  id: String!

  """The progress to skip."""
  progress: String!
}

""""""
type SkipAppTutorialProgressPayload {
  """"""
  app: App!
}

""""""
type SubscriptionItemPrice {
  """"""
  currency: String!

  """"""
  smsRegion: SubscriptionItemPriceSMSRegion!

  """"""
  stripePriceID: String!

  """"""
  stripeProductID: String!

  """"""
  type: SubscriptionItemPriceType!

  """"""
  unitAmount: Int!

  """"""
  usageType: SubscriptionItemPriceUsageType!
}

""""""
enum SubscriptionItemPriceSMSRegion {
  """"""
  NONE

  """"""
  NORTH_AMERICA

  """"""
  OTHER_REGIONS
}

""""""
enum SubscriptionItemPriceType {
  """"""
  FIXED

  """"""
  USAGE
}

""""""
enum SubscriptionItemPriceUsageType {
  """"""
  NONE

  """"""
  SMS
}

""""""
type SubscriptionPlan {
  """"""
  name: String!

  """"""
  prices: [SubscriptionItemPrice]!
}

"""Tutorial status of an app"""
type TutorialStatus {
  """"""
  appID: String!

  """"""
  data: TutorialStatusData!
}

"""The `TutorialStatusData` scalar type represents tutorial status data"""
scalar TutorialStatusData

""""""
input UpdateAppInput {
  """authgear.yaml in JSON."""
  appConfig: AppConfig

  """App ID to update."""
  appID: ID!

  """secrets to update."""
  secretConfig: SecretConfigInput

  """Resource file updates."""
  updates: [AppResourceUpdate!]
}

""""""
type UpdateAppPayload {
  """"""
  app: App!
}

"""Portal User"""
type User implements Node {
  """"""
  email: String

  """The ID of an object"""
  id: ID!
}

""""""
input VerifyDomainInput {
  """Target app ID."""
  appID: ID!

  """Domain ID."""
  domainID: String!
}

""""""
type VerifyDomainPayload {
  """"""
  app: App!

  """"""
  domain: Domain!
}

"""Webhook secret"""
type WebhookSecret {
  """"""
  secret: String
}

""""""
input sendTestSMTPConfigurationEmailInput {
  """App ID to test."""
  appID: ID!

  """SMTP Host."""
  smtpHost: String!

  """SMTP Password."""
  smtpPassword: String!

  """SMTP Port."""
  smtpPort: Int!

  """SMTP Username."""
  smtpUsername: String!

  """The recipient email address."""
  to: String!
}
