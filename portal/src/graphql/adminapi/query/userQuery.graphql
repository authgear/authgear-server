fragment UserQueryNode on User {
  id
  roles {
    totalCount
    edges {
      cursor
      node {
        createdAt
        description
        id
        key
        name
        updatedAt
      }
    }
  }
  groups {
    totalCount
    edges {
      cursor
      node {
        createdAt
        description
        id
        key
        roles {
          edges {
            node {
              createdAt
              description
              id
              key
              name
              updatedAt
            }
          }
        }
        name
        roles {
          totalCount
          edges {
            node {
              createdAt
              description
              id
              key
              name
              updatedAt
            }
          }
        }
        updatedAt
      }
    }
  }
  authenticators {
    edges {
      node {
        ...AuthenticatorFragment
      }
    }
  }
  identities {
    edges {
      node {
        id
        type
        claims
        createdAt
        updatedAt
      }
    }
  }
  verifiedClaims {
    name
    value
  }
  standardAttributes
  customAttributes
  web3
  sessions {
    edges {
      node {
        id
        type
        clientID
        lastAccessedAt
        lastAccessedByIP
        displayName
        userAgent
      }
    }
  }
  authorizations {
    edges {
      node {
        id
        clientID
        scopes
        createdAt
      }
    }
  }
  formattedName
  endUserAccountID
  isAnonymous
  isDisabled
  disableReason
  isDeactivated
  deleteAt
  isAnonymized
  anonymizeAt
  temporarilyDisabledFrom
  temporarilyDisabledUntil
  accountValidFrom
  accountValidUntil
  lastLoginAt
  createdAt
  updatedAt
  mfaGracePeriodEndAt
}

fragment AuthenticatorFragment on Authenticator {
  id
  type
  kind
  isDefault
  claims
  createdAt
  updatedAt
  expireAfter
}

query userQuery($userID: ID!) {
  node(id: $userID) {
    __typename
    ...UserQueryNode
  }
}
